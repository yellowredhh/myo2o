<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	<!-- 配置SpringMVC -->
	<!-- 1.开启SpringMVC注解模式 -->
	<!-- 简化配置： (1)自动注册DefaultAnootationHandlerMapping,AnotationMethodHandlerAdapter 
		(2)提供一些列：数据绑定，数字和日期的format @NumberFormat, @DateTimeFormat, xml,json默认读写支持 -->
	<mvc:annotation-driven />

	<!-- 2.静态资源默认servlet配置 (1)加入对静态资源的处理：js,gif,png,不要拦截resources路径下的所有的资源 (其实我们就是把静态资源放在了这个目录下面)交由default-servlet-handler来处理 
		(2)允许使用"/"做整体映射 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:default-servlet-handler />

	<!-- 3.定义视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/html/"></property>
		<property name="suffix" value=".html"></property>
	</bean>

	<!-- 文件上传解析器 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="defaultEncoding" value="utf-8"></property>
		<property name="maxUploadSize" value="10485760000"></property><!-- 最大上传文件大小 -->
		<property name="maxInMemorySize" value="10960"></property>
	</bean>

	<!-- 4.扫描web相关的bean -->
	<context:component-scan base-package="com.imooc.myo2o.web" />

	<!-- 5.权限拦截器 -->
	<mvc:interceptors>
	
		<!-- 校验是否登录了店家管理系统的拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/shop/**" />
			<mvc:exclude-mapping path="/shop/ownerlogin" />
			<mvc:exclude-mapping path="/shop/ownerlogincheck" />
			<mvc:exclude-mapping path="/shop/logout" />
			<mvc:exclude-mapping path="/shop/register" />
			<bean id="ShopInterceptor" class="com.imooc.myo2o.interceptor.shop.ShopLoginInterceptor" />
		</mvc:interceptor>
		
		<!-- 校验是否对该店铺有操作权限的拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/shop/**" />
			<!-- 下面是一系列要做放行(exclude表示不做拦截的方法)的方法 -->
			<mvc:exclude-mapping path="/shop/ownerlogin" />
			<mvc:exclude-mapping path="/shop/ownerlogincheck" />
			<mvc:exclude-mapping path="/shop/register" />
			<!-- shoplist page -->
			<mvc:exclude-mapping path="/shopadmin/shoplist" />
			<mvc:exclude-mapping path="/shop/logout" />
			<mvc:exclude-mapping path="/shop/list" />
			<!-- changepsw page -->
			<mvc:exclude-mapping path="/shop/changepsw" />
			<mvc:exclude-mapping path="/shop/changelocalpwd" />
			<!-- ownerbind page -->
			<mvc:exclude-mapping path="/shop/ownerbind" />
			<mvc:exclude-mapping path="/shop/bindlocalauth" />
			<!-- shopmanage page,这个方法是生成currentshop的第一步,肯定不能拦截 -->
			<mvc:exclude-mapping path="/shop/shopmanage" />
			<!-- shopedit page -->
			<mvc:exclude-mapping path="/shop/shopedit" />
			<mvc:exclude-mapping path="/shop/getshopbyid" />
			<mvc:exclude-mapping path="/shop/getshopinitinfo" />
			<mvc:exclude-mapping path="/shop/registershop" />
			<bean id="ShopPermissionInterceptor"
				class="com.imooc.myo2o.interceptor.shop.ShopPermissionInterceptor" />
		</mvc:interceptor>

		<!-- 超级管理员权限拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/superadmin/**" />
			<mvc:exclude-mapping path="/superadmin/login" />
			<mvc:exclude-mapping path="/superadmin/logincheck" />
			<mvc:exclude-mapping path="/superadmin/main" />
			<mvc:exclude-mapping path="/superadmin/top" />
			<bean id="SuperAdminInterceptor"
				class="com.imooc.myo2o.interceptor.superadmin.SuperAdminLoginInterceptor" />
		</mvc:interceptor>

	</mvc:interceptors>
</beans>